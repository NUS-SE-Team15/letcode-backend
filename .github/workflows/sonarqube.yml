name: SonarCloud
on:
  push:
    branches:
      - "main"
      - "CICD-PIPELINE"
  pull_request:
    branches:
      - "main"
      - "CICD-PIPELINE"
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # 关闭默认的 MySQL 服务（如果存在）
      - name: Shutdown system MySQL service (if running)
        run: sudo service mysql stop

      # 设置 MySQL 实例，确保端口映射正确
      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '8.0'
          mysql root password: '123456'    # 使用提供的 MySQL root 密码
          mysql database: 'letcode'
          host port: 3306                  # 映射主机端口
          container port: 3306             # 容器内的 MySQL 端口

      # 增加等待时间，确保 MySQL 启动
      - name: Wait for MySQL to start
        run: sleep 10

      # 设置 MYSQL_PWD 环境变量，避免命令行传递密码
      - name: Set MYSQL_PWD environment variable
        run: echo "MYSQL_PWD=$MYSQL_ROOT_PASSWORD" >> $GITHUB_ENV
        env:
          MYSQL_ROOT_PASSWORD: '123456'    # 使用提供的 MySQL root 密码

      # 检查 MySQL 服务状态
      - name: Check MySQL service status
        run: mysqladmin -h 127.0.0.1 -u root ping

      # 执行 SQL 文件
      - name: Execute SQL file
        run: mysql -h 127.0.0.1 -u root letcode < ${{ github.workspace }}/sql/create_table.sql

      # 确保 Maven Wrapper 有执行权限
      - name: Add execution permissions for Maven wrapper
        run: chmod +x ./mvnw

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./mvnw -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=nus-se-team15_letcode-backend